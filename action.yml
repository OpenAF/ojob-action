name: "OpenAF's oJob action"
description: "Runs an OpenAF's oJob"
branding:
  icon : 'command'
  color: 'orange'
inputs:
  ojob:  
    description: 'The oJob to run'
    required: false
    default: 'ojob.io/envs'
  def:
    description: 'The oJob definition in alternative to the ojob input'
    required: false
    default: ''
  oaf:
    description: 'A OpenAF script file to run'
    required: false
    default: ''
  script: 
    description: 'The OpenAF script contents to execute'
    required: false
    default: ''
  args:
    description: 'The oJob args to use'
    required: false
    default: ''
  dist:
    description: 'The OpenAF distribution to use'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
  - shell: bash
    run  : |
      if [ ! -f /tmp/oaf/ojob ]; then
        CDIR=`pwd`
        mkdir /tmp/oaf
        cd /tmp/oaf
        curl https://openaf.io/${{ inputs.dist }}/openaf.jar.repacked -o openaf.jar
        java -jar openaf.jar --install
        cd $CDIR
      fi
  - shell: bash
    run  : |
      if [ ! -z '${{ inputs.def }}' ]; then
        echo '${{ inputs.def}}' > /tmp/temp.yaml
        /tmp/oaf/ojob /tmp/temp.yaml ${{ inputs.args }}
      else 
        if [ ! -z '${{ inputs.oaf }}' ]; then
          /tmp/oaf/oaf -c ${{ inputs.oaf }} -e '${{ inputs.args }}'
        else
          if [ ! -z '${{ inputs.script }}' ]; then
            echo '${{ inputs.script }}' > /tmp/temp.js
            /tmp/oaf/oaf -f /tmp/temp.js -e '${{ inputs.args }}'
          else
            /tmp/oaf/ojob ${{ inputs.ojob }} ${{ inputs.args }}
          fi
        fi
      fi
